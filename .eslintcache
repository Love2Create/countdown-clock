[{"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/index.js":"1","/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/App.js":"2","/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/Numbers.js":"3","/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/NumberPair.js":"4","/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/CountdownClock.js":"5"},{"size":179,"mtime":1658676751171,"results":"6","hashOfConfig":"7"},{"size":316,"mtime":1658691325490,"results":"8","hashOfConfig":"7"},{"size":953,"mtime":1658679087443,"results":"9","hashOfConfig":"7"},{"size":916,"mtime":1658693244836,"results":"10","hashOfConfig":"7"},{"size":2860,"mtime":1658690275029,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ykpc48",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/index.js",[],["24","25"],"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/App.js",[],"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/Numbers.js",[],"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/NumberPair.js",[],"/Users/vicky.lu/Desktop/DoNotDelete/Code/CountdownClock/src/components/CountdownClock.js",["26"],"import NumberPair from \"./NumberPair\";\nimport './CountdownClock.css';\nimport { useState } from \"react\";\n\nconst CountdownClock = () => {\n\n    const [dayData, setDayData] = useState(0);\n    const [hourData, setHourData] = useState(0);\n    const [minuteData, setMinuteData] = useState(0);\n    const [secondData, setSecondData] = useState(0);\n    const [nextDayData, setNextDayData] = useState(0);\n    const [nextHourData, setNextHourData] = useState(0);\n    const [nextMinuteData, setNextMinuteData] = useState(0);\n    const [nextSecondData, setNextSecondData] = useState(0);\n\n    const groupNames = ['days', 'hours', 'minutes', 'seconds'];\n    const endDate = new Date('08/03/2022');\n    // const endDate = new Date('08/03/2022 11:00:00');\n    const timeOffset = 0;\n\n    const getDateData = async() => {\n        const currentDateData = new Date(new Date().getTime()+timeOffset);\n        const dateDifference = (endDate.getTime()+timeOffset)-(currentDateData.getTime());\n        const newDateData = new Date(dateDifference);\n        const totalDays = Math.ceil(dateDifference / (1000 * 3600 * 24));\n\n        // console.log(newDateData);\n        const nextSecond = newDateData.getSeconds();\n        setNextSecondData(nextSecond);\n        const nextMinute = newDateData.getMinutes();\n        setNextMinuteData(nextMinute);\n        const nextHour = newDateData.getHours();\n        setNextHourData(nextHour);\n        setNextDayData(totalDays);\n\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n        setSecondData(nextSecond);\n        setMinuteData(nextMinute);\n        setHourData(nextHour);\n        setDayData(totalDays);\n    }\n\n    setInterval( ()=> {\n        getDateData();\n    }, 1000);\n\n    const testHandler = async () => {\n        const nextVal = dayData+1;\n        setNextDayData(nextVal);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setDayData(nextVal);\n    }\n\n    return(\n        <div>\n            <div className=\"clock--wrapper__main\">\n                <NumberPair currentNumber={dayData} nextNumber={nextDayData} groupName={groupNames[0]}></NumberPair>\n                <div className=\"day--spacer\"></div>\n                <NumberPair currentNumber={hourData} nextNumber={nextHourData} groupName={groupNames[1]}></NumberPair>\n                <div className=\"time--spacer\">\n                    <p>:</p>\n                </div>\n                <NumberPair currentNumber={minuteData} nextNumber={nextMinuteData} groupName={groupNames[2]}></NumberPair>\n                <div className=\"time--spacer\">\n                    <p>:</p>\n                </div>\n                <NumberPair currentNumber={secondData} nextNumber={nextSecondData} groupName={groupNames[3]}></NumberPair>\n            </div>\n            {/* <button onClick={testHandler}>Hit me</button> */}\n        </div>\n    );\n}\n\nexport default CountdownClock;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":48,"column":11,"nodeType":"33","messageId":"34","endLine":48,"endColumn":22},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'testHandler' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]